@using AzureOpenAIProxy.PlaygroundApp.Clients
@inject IOpenAIApiClient Api

<div class="container" id="chat-window">
    <h3>Chat Window</h3>
    <div id="chat-box">
        <textarea class="form-control" id="user-prompt" readonly>@userPrompt</textarea>
        <textarea class="form-control" id="assistent-prompt" readonly>@assistant</textarea>
    </div>
    <div>
        <textarea id="user-input" class="form-control"></textarea>
        <button id="send" class="btn btn-primary" @onclick="SendAsync">Send</button>
        <button id="clear" class="btn btn-secondary" @onclick="ClearAsync">Clear</button>
    </div>
</div>

@code {
    private string? apiKey = "abcdef";
    private string? endpoint = "https://localhost:5051";
    private string? deploymentName = "model-gpt35turbo16k-0613";
    private int? maxToken = 4096;
    private float? temperature = 0.7f;
    private string? systemPrompt = "You are an AI assistant that helps people find information.";
    private string? userInput;
    private string? userPrompt;
    private string? assistant;

    private async Task SetSystemPromptAsync()
    {
        // Send the user input to the server
        await Task.CompletedTask;
    }

    private async Task ResetSystemPromptAsync()
    {
        // Clear the chat box
        await Task.CompletedTask;
    }

    private async Task SendAsync()
    {
        var options = new OpenAIApiClientOptions
            {
                ApiKey = this.apiKey,
                Endpoint = this.endpoint,
                DeploymentName = this.deploymentName,
                MaxToken = this.maxToken,
                Temperature = this.temperature,
                SystemPrompt = this.systemPrompt,
                UserPrompt = this.userInput,
            };

        var result = await this.Api.CompleteChatAsync(options);
        userPrompt = userInput;
        assistant = result;
    }

    private async Task ClearAsync()
    {
        // Clear the chat box
        await Task.CompletedTask;
    }
}
