@inject IApiAppClient ApiApp

<div class="container">
    <div class="form-group">
        <label for="accessCode">Access Code:</label>
        <input type="text" id="accessCode" class="form-control" @bind="@AccessCode" />
    </div>

    <div class="form-group">
        <label for="githubAlias">GitHub Alias:</label>
        <input type="text" id="githubAlias" class="form-control" @bind="@GitHubAlias" />
    </div>

    <div class="form-group">
        <label for="deploymentName">Deployment Name:</label>
        <input type="text" id="deploymentName" class="form-control" @bind="@DeploymentName" />
    </div>

    <div class="form-group">
        <label for="maxTokens">Max Tokens:</label>
        <input type="text" id="maxTokens" class="form-control" @bind="@MaxTokens" />
    </div>

    <div class="form-group">
        <label for="temperature">Temperature:</label>
        <input type="text" id="temperature" class="form-control" @bind="@Temperature" />
    </div>

    <div class="form-group">
        <label for="prompt">Prompt:</label>
        <textarea id="prompt" class="form-control" @bind="@Prompt"></textarea>
    </div>

    <button class="btn btn-primary" @onclick="CompleteAsync">Complete</button>
    <button class="btn btn-secondary" @onclick="ClearAsync">Clear</button>

    <textarea id="completionResult" class="form-control" readonly>@CompletionResult</textarea>
</div>

@code {
    private string? AccessCode { get; set; }
    private string? GitHubAlias { get; set; }
    private string? DeploymentName { get; set; }
    private int? MaxTokens { get; set; } = 2048;
    private float? Temperature { get; set; } = 0.7f;
    private string? Prompt { get; set; }
    private string? CompletionResult { get; set; }

    private async Task CompleteAsync()
    {
        var ping = await ApiApp.GetPingAsync();
        var result = await ApiApp.GetChatCompletionsAsync(AccessCode, GitHubAlias, DeploymentName, Prompt, MaxTokens, Temperature);
        CompletionResult = result;
    }

    private async Task ClearAsync()
    {
        AccessCode = string.Empty;
        GitHubAlias = string.Empty;
        DeploymentName = string.Empty;
        MaxTokens = 2048;
        Temperature = 0.7f;
        Prompt = string.Empty;
        CompletionResult = string.Empty;

        await Task.CompletedTask;
    }
}
